services:
    # Основное приложение Laravel с FrankenPHP
    app:
        build:
            context: .
            dockerfile: Dockerfile
            target: production
        container_name: laravel_app
        restart: unless-stopped
        ports:
            # Используем нестандартные порты, чтобы не конфликтовать с Caddy
            - "127.0.0.1:8000:8000"   # Основной порт приложения (только localhost)
            - "127.0.0.1:8080:8080"   # Health check
        environment:
            # Основные настройки Laravel
            APP_NAME: ${APP_NAME:-Laravel}
            APP_ENV: ${APP_ENV:-production}
            APP_KEY: ${APP_KEY}
            APP_DEBUG: ${APP_DEBUG:-false}
            APP_URL: ${APP_URL:-https://yourdomain.com}

            # Настройки базы данных (SQLite по умолчанию)
            DB_CONNECTION: ${DB_CONNECTION:-sqlite}
            DB_DATABASE: ${DB_DATABASE:-/app/database/database.sqlite}

            # Настройки кеша
            CACHE_DRIVER: ${CACHE_DRIVER:-redis}
            SESSION_DRIVER: ${SESSION_DRIVER:-redis}
            QUEUE_CONNECTION: ${QUEUE_CONNECTION:-redis}

            # Redis настройки
            REDIS_HOST: redis
            REDIS_PASSWORD: ${REDIS_PASSWORD:-null}
            REDIS_PORT: 6379

            # Настройки почты
            MAIL_MAILER: ${MAIL_MAILER:-smtp}
            MAIL_HOST: ${MAIL_HOST}
            MAIL_PORT: ${MAIL_PORT:-587}
            MAIL_USERNAME: ${MAIL_USERNAME}
            MAIL_PASSWORD: ${MAIL_PASSWORD}
            MAIL_ENCRYPTION: ${MAIL_ENCRYPTION:-tls}
            MAIL_FROM_ADDRESS: ${MAIL_FROM_ADDRESS}
            MAIL_FROM_NAME: "${MAIL_FROM_NAME:-Laravel}"

            # Настройки trusted proxies для работы за reverse proxy
            TRUSTED_PROXIES: "*"  # В production укажите IP вашего Caddy сервера

            LOG_CHANNEL: ${LOG_CHANNEL:-stack}
            LOG_LEVEL: ${LOG_LEVEL:-error}
        volumes:
            - ./storage:/app/storage
            - ./storage/database:/app/storage/database
            # Для разработки (раскомментируйте при необходимости)
            # - .:/app
        networks:
            - laravel_network
        depends_on:
            - redis
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s

    redis:
        image: redis:7-alpine
        container_name: laravel_redis
        restart: unless-stopped
        command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-yourredispassword}
        ports:
            - "127.0.0.1:6379:6379"  # localhost
        volumes:
            - redis_data:/data
        networks:
            - laravel_network
        healthcheck:
            test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD:-yourredispassword}", "ping"]
            interval: 10s
            timeout: 5s
            retries: 3

volumes:
    redis_data:
        driver: local

networks:
    laravel_network:
        driver: bridge
        ipam:
            config:
                - subnet: 172.20.0.0/24
