name: SimpleWl

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest
    name: Run tests

    steps:
      - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
        with:
          php-version: '8.2'
      - uses: actions/checkout@v3
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Create Database
        run: |
          mkdir -p database
          touch storage/database/database.sqlite
      - name: Execute migrations
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: storage/database/database.sqlite
        run: php artisan migrate --force
      - name: Execute laravel pint
        run: vendor/bin/pint
      - name: Execute phpstan
        run: vendor/bin/phpstan analyse
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: storage/database/database.sqlite
        run: vendor/bin/phpunit

  deploy:
    needs: tests
    if: github.event_name == 'push' && github.event.ref == 'refs/heads/main'
    name: Deploy app to fly.io
    runs-on: ubuntu-latest
    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Check and start machine
        run: |
          if [ -n "${{ secrets.MACHINE_ID }}" ]; then
            echo "Machine ID exists. Checking machine status..."
            status=$(flyctl machine status ${{ secrets.MACHINE_ID }} | grep 'State:')
            echo "Machine Status: $status"

            if [[ "$status" == *"stopped"* ]]; then
              echo "Machine is stopped. Starting the machine..."
              flyctl machine start ${{ secrets.MACHINE_ID }}
            else
              echo "Machine is not stopped. No action required."
            fi
          else
            echo "Machine ID does not exist. No action required."
          fi
      - run: flyctl deploy --remote-only
      - run: flyctl ssh console --command 'php artisan route:cache'
